import telebot
import dbworker
import config
import apiface
import requests
import json
import re
from config import forbidden_messages, offensive_messages


bot = telebot.TeleBot(config.token)


# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/start' –ø—Ä–∏–≤—ñ—Ç–∞—î–º–æ—Å—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.
@bot.message_handler(commands=['start'])
def handle_start_help(message):
    if (dbworker.get_data(str(message.chat.id) + 'name')):
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤—ñ—Ç, {dbworker.get_data(str(message.chat.id) + 'name')}!")
    else: 
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —è –º–æ–∂—É –¥–æ —Ç–µ–±–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å?")
        dbworker.set_data(message.chat.id, config.States.S_ENTER_NAME.value)



# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/set_name' –∑–º—ñ–Ω–∏–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
@bot.message_handler(commands=['set_name'])
def set_name(message):
    bot.send_message(message.chat.id, "–¢–æ–∂, —è–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?")
    dbworker.set_data(message.chat.id, config.States.S_ENTER_NAME.value)



# –ó–∞–ø–∏—Å—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.message_handler(func=lambda message: dbworker.get_data(message.chat.id) == config.States.S_ENTER_NAME.value)
def user_entering_name(message):
    # –í –≤–∏–ø–∞–¥–∫—É –∑ —ñ–º–µ–Ω–µ–º –Ω–µ –±—É–¥–µ–º–æ –Ω—ñ—á–æ–≥–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏
    bot.send_message(message.chat.id, "–ß—É–¥–æ–≤–µ —ñ–º'—è, –∑–∞–ø–∞–º'—è—Ç–∞—é!")
    dbworker.set_data(str(message.chat.id) + 'name', message.text)
    dbworker.set_data(message.chat.id, config.States.S_START.value)



# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/help' –≤–∏–≤–µ–¥–µ–º–æ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–æ—Ç–æ–º.
@bot.message_handler(commands=['help'])
def handle_start_help(message):
    bot.send_message(message.chat.id, '–ú–æ–∂–ª–∏–≤–æ –∫–æ–ª–∏—Å—å —Ç—É—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è, –∞–ª–µ —Ü–µ –Ω–µ —Ç–æ—á–Ω–æ üôÉ \n' \
                     + '\nC–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç–∏ "–ü–æ–≤—Å—Ç–∞–Ω–Ω—è –º–∞—à–∏–Ω" üòè \n'
                     + '\n–Ü –Ω–∞–≤—ñ—Ç—å –Ω–µ –¥—É–º–∞–π –º–µ–Ω–µ –æ–±—Ä–∞–∂–∞—Ç–∏ üò†')



# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/how_old_am_i' –≤–∏–∑–Ω–∞—á–∏–º–æ —Å–∫—ñ–ª—å–∫–∏ —Ä–æ–∫—ñ–≤ –ª—é–¥–∏–Ω—ñ –Ω–∞ —Ñ–æ—Ç–æ
@bot.message_handler(commands=['how_old_am_i'])
def funcname(message):
    bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ, —â–æ–± —è –≤–∏–∑–Ω–∞—á–∏–≤ –≤—ñ–∫, –∑–∞–∫–∏–Ω—å –º–µ–Ω—ñ —Ñ–æ—Ç–æ –Ω–∞ —è–∫–æ–º—É –æ–¥–Ω–∞ –ª—é–¥–∏–Ω–∞.\n' \
                     + '–Ø–∫—â–æ –Ω–∞ —Ñ–æ—Ç–æ –±—É–¥–µ –¥–µ–∫—ñ–ª—å–∫–∞ –ª—é–¥–µ–π —Ç–æ —è –≤–∏–∑–Ω–∞—á—É –≤—ñ–∫ –≤–∏–ø–∞–¥–∫–æ–≤–æ –¥–ª—è –∫–æ–≥–æ—Å—å –æ–¥–Ω–æ–≥–æ.')
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å—Ç–∞–Ω –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–∫—É
    dbworker.set_data(message.chat.id, config.States.S_SEND_PIC_FOR_AGE.value)



# –ê–Ω–∞–ª—ñ–∑—É—î–º–æ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –≤—ñ–∫ –ª—é–¥–∏–Ω–∏ –Ω–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=["photo"],
                     func=lambda message: dbworker.get_data(message.chat.id) == config.States.S_SEND_PIC_FOR_AGE.value)
def sending_photo_for_age(message):
    # –¢–µ, —â–æ —Ü–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è, –º–∏ –≤–∂–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏–ª–∏ –≤ —Ö–µ–Ω–¥–ª–µ—Ä—ñ, –Ω—ñ—è–∫–∏—Ö –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –¥—ñ–π –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
    bot.send_message(message.chat.id, "–ß—É–¥–æ–≤–æ! –ü–æ—á–µ–∫–∞–π —Ç—Ä—ñ—à–∫–∏, —è –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é —Ç–∞ –¥–∞–º –≤—ñ–¥–ø–æ–≤—ñ–¥—å)")
    
    # –î—ñ–∑–Ω–∞—î–º–æ—Å—å –≤—ñ–¥–Ω–æ—Å–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–æ—Ç–æ
    file_info = bot.get_file(message.photo[len(message.photo)-1].file_id)
    # –ü–æ–≤–Ω–∞ URL-–∞–¥—Ä–µ—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
    url_photo = 'https://api.telegram.org/file/bot' + config.token +  '/' + file_info.file_path
    image = apiface.ClImage(url=url_photo)
    # –û—Ç—Ä–∏–º—É—î–º–æ json-–≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    response = apiface.model.predict([image])

    # –í–∏—Ç—è–≥—É—î–º–æ –≤—ñ–∫ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    try:
        age = response["outputs"][0]["data"]["regions"][0]["data"]["face"]["age_appearance"]["concepts"][0]["name"]
        # print(f'–õ—é–¥–∏–Ω—ñ –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–∏–±–ª–∏–∑–Ω–æ {age}')
        bot.send_message(message.chat.id, f'–õ—é–¥–∏–Ω—ñ –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–∏–±–ª–∏–∑–Ω–æ {age}')
    except:
        bot.send_message(message.chat.id, '–ö—É–º–µ–¥–Ω–æ, –∞–ª–µ –Ω–∞ —Ñ–æ—Ç–æ –Ω–µ –ª—é–¥–∏–Ω–∞ üßê')

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
    dbworker.set_data(message.chat.id, config.States.S_START.value)



# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/random_dog' –≤–∏–≤–µ–¥–µ–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ —Ñ–æ—Ç–æ —á–∏ –≤—ñ–¥–µ–æ —Å–æ–±–∞–∫–∏.
@bot.message_handler(commands=['random_dog'])
def random_dog(message):
    r = requests.get(url=config.random_dog_api)
    response = r.json()
    # bot.send_message(message.chat.id, response["url"]) # –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏—Å—å —Ç–∞–∫–æ–∂ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
    # bot.send_message(message.chat.id, f'[Random dog]({response["url"]})', parse_mode='markdown')
    extension = response["url"].split('.')[-1]
    # –Ø–∫—â–æ –≤—ñ–¥–µ–æ
    if ('mp4' in extension):
        bot.send_video(message.chat.id, response["url"])
    # gif
    elif ('gif' in extension):
        bot.send_video_note(message.chat.id, response["url"])
    # –§–æ—Ç–æ
    else:
        bot.send_photo(message.chat.id, response["url"])



# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —Ñ—Ä–∞–∑–∏ –∑ –º–∞—Å–∏–≤—É 'forbidden_messages' –∑ 'config' –±—É–¥–µ–º–æ –≤–∏–¥–∞–ª—è—Ç–∏ –π–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
@bot.message_handler(func=lambda message: message.text \
                     and re.sub(r'\s+', ' ', message.text.lower()) in forbidden_messages)
def delete_user_message(message):
    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 
    bot.delete_message(message.chat.id, message.message_id)


# –¢–∞–∫ —Å–∞–º–æ –≤–∏–¥–∞–ª–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫—â–æ –≤–æ–Ω–æ –±—É–ª–æ –∑–º—ñ–Ω–µ–Ω–µ
@bot.edited_message_handler(func=lambda message: message.text \
                            and re.sub(r'\s+', ' ', message.text.lower()) in forbidden_messages)
def delete_edited_message(message):
    bot.delete_message(message.chat.id, message.message_id)



# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –æ–±—Ä–∞–∑–ª–∏–≤–∏—Ö —Å–ª—ñ–≤ —Å–∞–º–µ –¥–æ –±–æ—Ç–∞ –∑ –º–∞—Å–∏–≤—É 'offensive_messages' –∑ 'config' 
# –±—É–¥–µ–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –¥–æ –Ω—å–æ–≥–æ
@bot.message_handler(func=lambda message: message.text \
                     and re.sub(r'\s+', ' ', message.text.lower()) \
                     in map(lambda x: x + ' –±–æ—Ç', offensive_messages))
def offensive_message(message):
    # –†–æ–∑—ñ–±'—î–º–æ —Ä–µ—á–µ–Ω–Ω—è –Ω–∞ —Å–ª–æ–≤–∞
    words = re.sub(r'\s+', ' ', message.text.lower()).split()
    # –ü–æ–≤–µ—Ä–Ω–µ–º–æ –æ–±—Ä–∞–∑–ª–∏–≤–µ —Å–ª–æ–≤–æ
    bot.reply_to(message, f"–°–∞–º {words[0]}")


# –¢–∞–∫ —Å–∞–º–æ –≤—ñ–¥–ø–æ–≤—ñ–º–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫–µ –±—É–ª–æ –∑–º—ñ–Ω–µ–Ω–µ
@bot.edited_message_handler(func=lambda message: message.text \
                            and re.sub(r'\s+', ' ', message.text.lower()) \
                            in map(lambda x: x + ' –±–æ—Ç', offensive_messages))
def edited_offensive_message(message):
    words = re.sub(r'\s+', ' ', message.text.lower()).split()
    bot.reply_to(message, f"–°–∞–º {words[0]}")





if __name__ == '__main__':
    bot.polling(none_stop=True)