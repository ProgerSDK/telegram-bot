import telebot
import dbworker
import config
import apiface


bot = telebot.TeleBot(config.token)


# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/start' –ø—Ä–∏–≤—ñ—Ç–∞—î–º–æ—Å—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.
@bot.message_handler(commands=['start'])
def handle_start_help(message):
    if (dbworker.get_data(str(message.chat.id) + 'name')):
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤—ñ—Ç, {dbworker.get_data(str(message.chat.id) + 'name')}!")
    else: 
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —è –º–æ–∂—É –¥–æ —Ç–µ–±–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å?")
        dbworker.set_data(message.chat.id, config.States.S_ENTER_NAME.value)


# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/set_name' –∑–º—ñ–Ω–∏–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
@bot.message_handler(commands=['set_name'])
def set_name(message):
    bot.send_message(message.chat.id, "–¢–æ–∂, —è–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?")
    dbworker.set_data(message.chat.id, config.States.S_ENTER_NAME.value)


# –ó–∞–ø–∏—Å—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.message_handler(func=lambda message: dbworker.get_data(message.chat.id) == config.States.S_ENTER_NAME.value)
def user_entering_name(message):
    # –í –≤–∏–ø–∞–¥–∫—É –∑ —ñ–º–µ–Ω–µ–º –Ω–µ –±—É–¥–µ–º–æ –Ω—ñ—á–æ–≥–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏
    bot.send_message(message.chat.id, "–ß—É–¥–æ–≤–µ —ñ–º'—è, –∑–∞–ø–∞–º'—è—Ç–∞—é!")
    dbworker.set_data(str(message.chat.id) + 'name', message.text)
    dbworker.set_data(message.chat.id, config.States.S_START.value)


# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/help' –≤–∏–≤–µ–¥–µ–º–æ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–æ—Ç–æ–º.
@bot.message_handler(commands=['help'])
def handle_start_help(message):
    bot.send_message(message.chat.id, '–ú–æ–∂–ª–∏–≤–æ –∫–æ–ª–∏—Å—å —Ç—É—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è, –∞–ª–µ —Ü–µ –Ω–µ —Ç–æ—á–Ω–æ, üôÉ')


# –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ '/how_old_am_i' –≤–∏–∑–Ω–∞—á–∏–º–æ —Å–∫—ñ–ª—å–∫–∏ —Ä–æ–∫—ñ–≤ –ª—é–¥–∏–Ω—ñ –Ω–∞ —Ñ–æ—Ç–æ
@bot.message_handler(commands=['how_old_am_i'])
def funcname(message):
    bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ, —â–æ–± —è –≤–∏–∑–Ω–∞—á–∏–≤ –≤—ñ–∫, –∑–∞–∫–∏–Ω—å –º–µ–Ω—ñ —Ñ–æ—Ç–æ –Ω–∞ —è–∫–æ–º—É –æ–¥–Ω–∞ –ª—é–¥–∏–Ω–∞')
    dbworker.set_data(message.chat.id, config.States.S_SEND_PIC_FOR_AGE.value)


# –ê–Ω–∞–ª—ñ–∑—É—î–º–æ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –≤—ñ–∫ –ª—é–¥–∏–Ω–∏ –Ω–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=["photo"],
                     func=lambda message: dbworker.get_data(message.chat.id) == config.States.S_SEND_PIC_FOR_AGE.value)
def sending_photo_for_age(message):
    # –¢–µ, —â–æ —Ü–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è, –º–∏ –≤–∂–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏–ª–∏ –≤ —Ö–µ–Ω–¥–ª–µ—Ä—ñ, –Ω—ñ—è–∫–∏—Ö –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –¥—ñ–π –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
    bot.send_message(message.chat.id, "–ß—É–¥–æ–≤–æ! –ü–æ—á–µ–∫–∞–π —Ç—Ä—ñ—à–∫–∏, —è –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é —Ç–∞ –¥–∞–º –≤—ñ–¥–ø–æ–≤—ñ–¥—å)")
    
    # response = apiface.model.predict_by_filename('example.jpg')
    response = apiface.model.predict_by_filename(message.photo['file_id'])

    age = response["outputs"][0]["data"]["regions"][0]["data"]["face"]["age_appearance"]["concepts"][0]["name"]
    print(f'–õ—é–¥–∏–Ω—ñ –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–∏–±–ª–∏–∑–Ω–æ {age}')
    bot.send_message(message.chat.id, f'–õ—é–¥–∏–Ω—ñ –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–∏–±–ª–∏–∑–Ω–æ {age}')

    dbworker.set_state(message.chat.id, config.States.S_START.value)


if __name__ == '__main__':
    bot.polling(none_stop=True)